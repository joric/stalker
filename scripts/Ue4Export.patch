diff --git a/Ue4Export/Exporter.cs b/Ue4Export/Exporter.cs
index 8a81bc7..fa5d2ca 100644
--- a/Ue4Export/Exporter.cs
+++ b/Ue4Export/Exporter.cs
@@ -26,6 +26,7 @@ using CUE4Parse.UE4.Shaders;
 using CUE4Parse.UE4.Versions;
 using CUE4Parse.UE4.Wwise;
 using CUE4Parse_Conversion.Textures;
+using CUE4Parse_Conversion.Textures.BC;
 using Newtonsoft.Json;
 using SkiaSharp;
 using System.Text;
@@ -72,6 +73,15 @@ namespace Ue4Export
 
 		public bool Export()
 		{
+			var detexPath = Path.Combine(AppContext.BaseDirectory, DetexHelper.DLL_NAME);
+			if (File.Exists(detexPath))
+			{
+				mLogger?.Log(LogLevel.Important, $"Initializing detex at {detexPath}.");
+				DetexHelper.Initialize(detexPath);
+			}
+			else
+				mLogger?.Log(LogLevel.Important, $"Detex DLL not found, texture conversion is unavailable.");
+
 			bool success = true;
 
 			using (var provider = new DefaultFileProvider(new DirectoryInfo(mOptions.AssetsDirectory), mOptions.AssetSearchOption, null, null))
@@ -499,7 +509,7 @@ namespace Ue4Export
 
 							mLogger?.Log(LogLevel.Information, $"  Saving texture {texture.Name}");
 
-							string outPath = Path.Combine(mOptions.OutputDirectory, $"{ConvertAssetPath(texture.GetPathName())}.png");
+							string outPath = Path.Combine(mOptions.OutputDirectory, Path.ChangeExtension(assetPath, ".png"));
 							success &= WriteTexture(bitmap, SKEncodedImageFormat.Png, outPath);
 						}
 
